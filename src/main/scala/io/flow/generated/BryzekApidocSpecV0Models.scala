/**
 * Generated by apidoc - http://www.apidoc.me
 * Service version: 0.9.52
 * apidoc:0.10.0 http://www.apidoc.me/bryzek/apidoc-spec/0.9.52/play_2_x_standalone_json
 */
package com.bryzek.apidoc.spec.v0.models {

  sealed trait ResponseCode

  case class Apidoc(
    version: String
  )

  case class Application(
    key: String
  )

  case class Body(
    `type`: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None
  )

  /**
   * Describes the primary contact for this service
   */
  case class Contact(
    name: _root_.scala.Option[String] = None,
    url: _root_.scala.Option[String] = None,
    email: _root_.scala.Option[String] = None
  )

  /**
   * Indicates that this particular element is considered deprecated in the API. See
   * the description for details
   */
  case class Deprecation(
    description: _root_.scala.Option[String] = None
  )

  case class Enum(
    name: String,
    plural: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    values: Seq[com.bryzek.apidoc.spec.v0.models.EnumValue]
  )

  case class EnumValue(
    name: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None
  )

  case class Field(
    name: String,
    `type`: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    default: _root_.scala.Option[String] = None,
    required: Boolean,
    minimum: _root_.scala.Option[Long] = None,
    maximum: _root_.scala.Option[Long] = None,
    example: _root_.scala.Option[String] = None
  )

  case class Header(
    name: String,
    `type`: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    required: Boolean,
    default: _root_.scala.Option[String] = None
  )

  /**
   * An import is used to declare a dependency on another application. This allows
   * you to reference the models and or enums from that application in your own app.
   */
  case class Import(
    uri: String,
    namespace: String,
    organization: com.bryzek.apidoc.spec.v0.models.Organization,
    application: com.bryzek.apidoc.spec.v0.models.Application,
    version: String,
    enums: Seq[String] = Nil,
    unions: Seq[String] = Nil,
    models: Seq[String] = Nil
  )

  /**
   * General metadata about this service
   */
  case class Info(
    license: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.License] = None,
    contact: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Contact] = None
  )

  /**
   * Describes the software license contact for this service
   */
  case class License(
    name: String,
    url: _root_.scala.Option[String] = None
  )

  case class Model(
    name: String,
    plural: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    fields: Seq[com.bryzek.apidoc.spec.v0.models.Field]
  )

  case class Operation(
    method: com.bryzek.apidoc.spec.v0.models.Method,
    path: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    body: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Body] = None,
    parameters: Seq[com.bryzek.apidoc.spec.v0.models.Parameter] = Nil,
    responses: Seq[com.bryzek.apidoc.spec.v0.models.Response] = Nil
  )

  case class Organization(
    key: String
  )

  case class Parameter(
    name: String,
    `type`: String,
    location: com.bryzek.apidoc.spec.v0.models.ParameterLocation,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    required: Boolean,
    default: _root_.scala.Option[String] = None,
    minimum: _root_.scala.Option[Long] = None,
    maximum: _root_.scala.Option[Long] = None,
    example: _root_.scala.Option[String] = None
  )

  case class Resource(
    `type`: String,
    plural: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    operations: Seq[com.bryzek.apidoc.spec.v0.models.Operation]
  )

  case class Response(
    code: com.bryzek.apidoc.spec.v0.models.ResponseCode,
    `type`: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None
  )

  case class Service(
    apidoc: com.bryzek.apidoc.spec.v0.models.Apidoc,
    name: String,
    organization: com.bryzek.apidoc.spec.v0.models.Organization,
    application: com.bryzek.apidoc.spec.v0.models.Application,
    namespace: String,
    version: String,
    baseUrl: _root_.scala.Option[String] = None,
    description: _root_.scala.Option[String] = None,
    info: com.bryzek.apidoc.spec.v0.models.Info,
    headers: Seq[com.bryzek.apidoc.spec.v0.models.Header] = Nil,
    imports: Seq[com.bryzek.apidoc.spec.v0.models.Import] = Nil,
    enums: Seq[com.bryzek.apidoc.spec.v0.models.Enum] = Nil,
    unions: Seq[com.bryzek.apidoc.spec.v0.models.Union] = Nil,
    models: Seq[com.bryzek.apidoc.spec.v0.models.Model] = Nil,
    resources: Seq[com.bryzek.apidoc.spec.v0.models.Resource] = Nil
  )

  case class Union(
    name: String,
    plural: String,
    discriminator: _root_.scala.Option[String] = None,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None,
    types: Seq[com.bryzek.apidoc.spec.v0.models.UnionType]
  )

  /**
   * Metadata about one of the types that is part of a union type
   */
  case class UnionType(
    `type`: String,
    description: _root_.scala.Option[String] = None,
    deprecation: _root_.scala.Option[com.bryzek.apidoc.spec.v0.models.Deprecation] = None
  )

  /**
   * Provides future compatibility in clients - in the future, when a type is added
   * to the union ResponseCode, it will need to be handled in the client code. This
   * implementation will deserialize these future types as an instance of this class.
   */
  case class ResponseCodeUndefinedType(
    description: String
  ) extends ResponseCode


  /**
   * Wrapper class to support the union types containing the datatype[integer]
   */
  case class ResponseCodeInt(
    value: Int
  ) extends ResponseCode

  sealed trait Method

  object Method {

    case object Get extends Method { override def toString = "GET" }
    case object Post extends Method { override def toString = "POST" }
    case object Put extends Method { override def toString = "PUT" }
    case object Patch extends Method { override def toString = "PATCH" }
    case object Delete extends Method { override def toString = "DELETE" }
    case object Head extends Method { override def toString = "HEAD" }
    case object Connect extends Method { override def toString = "CONNECT" }
    case object Options extends Method { override def toString = "OPTIONS" }
    case object Trace extends Method { override def toString = "TRACE" }

    /**
     * UNDEFINED captures values that are sent either in error or
     * that were added by the server after this library was
     * generated. We want to make it easy and obvious for users of
     * this library to handle this case gracefully.
     *
     * We use all CAPS for the variable name to avoid collisions
     * with the camel cased values above.
     */
    case class UNDEFINED(override val toString: String) extends Method

    /**
     * all returns a list of all the valid, known values. We use
     * lower case to avoid collisions with the camel cased values
     * above.
     */
    val all = Seq(Get, Post, Put, Patch, Delete, Head, Connect, Options, Trace)

    private[this]
    val byName = all.map(x => x.toString.toLowerCase -> x).toMap

    def apply(value: String): Method = fromString(value).getOrElse(UNDEFINED(value))

    def fromString(value: String): _root_.scala.Option[Method] = byName.get(value.toLowerCase)

  }

  sealed trait ParameterLocation

  object ParameterLocation {

    case object Path extends ParameterLocation { override def toString = "Path" }
    case object Query extends ParameterLocation { override def toString = "Query" }
    case object Form extends ParameterLocation { override def toString = "Form" }

    /**
     * UNDEFINED captures values that are sent either in error or
     * that were added by the server after this library was
     * generated. We want to make it easy and obvious for users of
     * this library to handle this case gracefully.
     *
     * We use all CAPS for the variable name to avoid collisions
     * with the camel cased values above.
     */
    case class UNDEFINED(override val toString: String) extends ParameterLocation

    /**
     * all returns a list of all the valid, known values. We use
     * lower case to avoid collisions with the camel cased values
     * above.
     */
    val all = Seq(Path, Query, Form)

    private[this]
    val byName = all.map(x => x.toString.toLowerCase -> x).toMap

    def apply(value: String): ParameterLocation = fromString(value).getOrElse(UNDEFINED(value))

    def fromString(value: String): _root_.scala.Option[ParameterLocation] = byName.get(value.toLowerCase)

  }

  sealed trait ResponseCodeOption extends ResponseCode

  object ResponseCodeOption {

    case object Default extends ResponseCodeOption { override def toString = "Default" }

    /**
     * UNDEFINED captures values that are sent either in error or
     * that were added by the server after this library was
     * generated. We want to make it easy and obvious for users of
     * this library to handle this case gracefully.
     *
     * We use all CAPS for the variable name to avoid collisions
     * with the camel cased values above.
     */
    case class UNDEFINED(override val toString: String) extends ResponseCodeOption

    /**
     * all returns a list of all the valid, known values. We use
     * lower case to avoid collisions with the camel cased values
     * above.
     */
    val all = Seq(Default)

    private[this]
    val byName = all.map(x => x.toString.toLowerCase -> x).toMap

    def apply(value: String): ResponseCodeOption = fromString(value).getOrElse(UNDEFINED(value))

    def fromString(value: String): _root_.scala.Option[ResponseCodeOption] = byName.get(value.toLowerCase)

  }

}

package com.bryzek.apidoc.spec.v0.models {

  package object json {
    import play.api.libs.json.__
    import play.api.libs.json.JsString
    import play.api.libs.json.Writes
    import play.api.libs.functional.syntax._
    import com.bryzek.apidoc.spec.v0.models.json._

    private[v0] implicit val jsonReadsUUID = __.read[String].map(java.util.UUID.fromString)

    private[v0] implicit val jsonWritesUUID = new Writes[java.util.UUID] {
      def writes(x: java.util.UUID) = JsString(x.toString)
    }

    private[v0] implicit val jsonReadsJodaDateTime = __.read[String].map { str =>
      import org.joda.time.format.ISODateTimeFormat.dateTimeParser
      dateTimeParser.parseDateTime(str)
    }

    private[v0] implicit val jsonWritesJodaDateTime = new Writes[org.joda.time.DateTime] {
      def writes(x: org.joda.time.DateTime) = {
        import org.joda.time.format.ISODateTimeFormat.dateTime
        val str = dateTime.print(x)
        JsString(str)
      }
    }

    implicit val jsonReadsApidocspecMethod = __.read[String].map(Method.apply)
    implicit val jsonWritesApidocspecMethod = new Writes[Method] {
      def writes(x: Method) = JsString(x.toString)
    }

    implicit val jsonReadsApidocspecParameterLocation = __.read[String].map(ParameterLocation.apply)
    implicit val jsonWritesApidocspecParameterLocation = new Writes[ParameterLocation] {
      def writes(x: ParameterLocation) = JsString(x.toString)
    }

    implicit val jsonReadsApidocspecResponseCodeOption = __.read[String].map(ResponseCodeOption.apply)
    implicit val jsonWritesApidocspecResponseCodeOption = new Writes[ResponseCodeOption] {
      def writes(x: ResponseCodeOption) = JsString(x.toString)
    }

    implicit def jsonReadsApidocspecApidoc: play.api.libs.json.Reads[Apidoc] = {
      (__ \ "version").read[String].map { x => new Apidoc(version = x) }
    }

    implicit def jsonWritesApidocspecApidoc: play.api.libs.json.Writes[Apidoc] = new play.api.libs.json.Writes[Apidoc] {
      def writes(x: Apidoc) = play.api.libs.json.Json.obj(
        "version" -> play.api.libs.json.Json.toJson(x.version)
      )
    }

    implicit def jsonReadsApidocspecApplication: play.api.libs.json.Reads[Application] = {
      (__ \ "key").read[String].map { x => new Application(key = x) }
    }

    implicit def jsonWritesApidocspecApplication: play.api.libs.json.Writes[Application] = new play.api.libs.json.Writes[Application] {
      def writes(x: Application) = play.api.libs.json.Json.obj(
        "key" -> play.api.libs.json.Json.toJson(x.key)
      )
    }

    implicit def jsonReadsApidocspecBody: play.api.libs.json.Reads[Body] = {
      (
        (__ \ "type").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(Body.apply _)
    }

    implicit def jsonWritesApidocspecBody: play.api.libs.json.Writes[Body] = {
      (
        (__ \ "type").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(unlift(Body.unapply _))
    }

    implicit def jsonReadsApidocspecContact: play.api.libs.json.Reads[Contact] = {
      (
        (__ \ "name").readNullable[String] and
        (__ \ "url").readNullable[String] and
        (__ \ "email").readNullable[String]
      )(Contact.apply _)
    }

    implicit def jsonWritesApidocspecContact: play.api.libs.json.Writes[Contact] = {
      (
        (__ \ "name").writeNullable[String] and
        (__ \ "url").writeNullable[String] and
        (__ \ "email").writeNullable[String]
      )(unlift(Contact.unapply _))
    }

    implicit def jsonReadsApidocspecDeprecation: play.api.libs.json.Reads[Deprecation] = {
      (__ \ "description").readNullable[String].map { x => new Deprecation(description = x) }
    }

    implicit def jsonWritesApidocspecDeprecation: play.api.libs.json.Writes[Deprecation] = new play.api.libs.json.Writes[Deprecation] {
      def writes(x: Deprecation) = play.api.libs.json.Json.obj(
        "description" -> play.api.libs.json.Json.toJson(x.description)
      )
    }

    implicit def jsonReadsApidocspecEnum: play.api.libs.json.Reads[Enum] = {
      (
        (__ \ "name").read[String] and
        (__ \ "plural").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "values").read[Seq[com.bryzek.apidoc.spec.v0.models.EnumValue]]
      )(Enum.apply _)
    }

    implicit def jsonWritesApidocspecEnum: play.api.libs.json.Writes[Enum] = {
      (
        (__ \ "name").write[String] and
        (__ \ "plural").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "values").write[Seq[com.bryzek.apidoc.spec.v0.models.EnumValue]]
      )(unlift(Enum.unapply _))
    }

    implicit def jsonReadsApidocspecEnumValue: play.api.libs.json.Reads[EnumValue] = {
      (
        (__ \ "name").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(EnumValue.apply _)
    }

    implicit def jsonWritesApidocspecEnumValue: play.api.libs.json.Writes[EnumValue] = {
      (
        (__ \ "name").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(unlift(EnumValue.unapply _))
    }

    implicit def jsonReadsApidocspecField: play.api.libs.json.Reads[Field] = {
      (
        (__ \ "name").read[String] and
        (__ \ "type").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "default").readNullable[String] and
        (__ \ "required").read[Boolean] and
        (__ \ "minimum").readNullable[Long] and
        (__ \ "maximum").readNullable[Long] and
        (__ \ "example").readNullable[String]
      )(Field.apply _)
    }

    implicit def jsonWritesApidocspecField: play.api.libs.json.Writes[Field] = {
      (
        (__ \ "name").write[String] and
        (__ \ "type").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "default").writeNullable[String] and
        (__ \ "required").write[Boolean] and
        (__ \ "minimum").writeNullable[Long] and
        (__ \ "maximum").writeNullable[Long] and
        (__ \ "example").writeNullable[String]
      )(unlift(Field.unapply _))
    }

    implicit def jsonReadsApidocspecHeader: play.api.libs.json.Reads[Header] = {
      (
        (__ \ "name").read[String] and
        (__ \ "type").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "required").read[Boolean] and
        (__ \ "default").readNullable[String]
      )(Header.apply _)
    }

    implicit def jsonWritesApidocspecHeader: play.api.libs.json.Writes[Header] = {
      (
        (__ \ "name").write[String] and
        (__ \ "type").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "required").write[Boolean] and
        (__ \ "default").writeNullable[String]
      )(unlift(Header.unapply _))
    }

    implicit def jsonReadsApidocspecImport: play.api.libs.json.Reads[Import] = {
      (
        (__ \ "uri").read[String] and
        (__ \ "namespace").read[String] and
        (__ \ "organization").read[com.bryzek.apidoc.spec.v0.models.Organization] and
        (__ \ "application").read[com.bryzek.apidoc.spec.v0.models.Application] and
        (__ \ "version").read[String] and
        (__ \ "enums").read[Seq[String]] and
        (__ \ "unions").read[Seq[String]] and
        (__ \ "models").read[Seq[String]]
      )(Import.apply _)
    }

    implicit def jsonWritesApidocspecImport: play.api.libs.json.Writes[Import] = {
      (
        (__ \ "uri").write[String] and
        (__ \ "namespace").write[String] and
        (__ \ "organization").write[com.bryzek.apidoc.spec.v0.models.Organization] and
        (__ \ "application").write[com.bryzek.apidoc.spec.v0.models.Application] and
        (__ \ "version").write[String] and
        (__ \ "enums").write[Seq[String]] and
        (__ \ "unions").write[Seq[String]] and
        (__ \ "models").write[Seq[String]]
      )(unlift(Import.unapply _))
    }

    implicit def jsonReadsApidocspecInfo: play.api.libs.json.Reads[Info] = {
      (
        (__ \ "license").readNullable[com.bryzek.apidoc.spec.v0.models.License] and
        (__ \ "contact").readNullable[com.bryzek.apidoc.spec.v0.models.Contact]
      )(Info.apply _)
    }

    implicit def jsonWritesApidocspecInfo: play.api.libs.json.Writes[Info] = {
      (
        (__ \ "license").writeNullable[com.bryzek.apidoc.spec.v0.models.License] and
        (__ \ "contact").writeNullable[com.bryzek.apidoc.spec.v0.models.Contact]
      )(unlift(Info.unapply _))
    }

    implicit def jsonReadsApidocspecLicense: play.api.libs.json.Reads[License] = {
      (
        (__ \ "name").read[String] and
        (__ \ "url").readNullable[String]
      )(License.apply _)
    }

    implicit def jsonWritesApidocspecLicense: play.api.libs.json.Writes[License] = {
      (
        (__ \ "name").write[String] and
        (__ \ "url").writeNullable[String]
      )(unlift(License.unapply _))
    }

    implicit def jsonReadsApidocspecModel: play.api.libs.json.Reads[Model] = {
      (
        (__ \ "name").read[String] and
        (__ \ "plural").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "fields").read[Seq[com.bryzek.apidoc.spec.v0.models.Field]]
      )(Model.apply _)
    }

    implicit def jsonWritesApidocspecModel: play.api.libs.json.Writes[Model] = {
      (
        (__ \ "name").write[String] and
        (__ \ "plural").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "fields").write[Seq[com.bryzek.apidoc.spec.v0.models.Field]]
      )(unlift(Model.unapply _))
    }

    implicit def jsonReadsApidocspecOperation: play.api.libs.json.Reads[Operation] = {
      (
        (__ \ "method").read[com.bryzek.apidoc.spec.v0.models.Method] and
        (__ \ "path").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "body").readNullable[com.bryzek.apidoc.spec.v0.models.Body] and
        (__ \ "parameters").read[Seq[com.bryzek.apidoc.spec.v0.models.Parameter]] and
        (__ \ "responses").read[Seq[com.bryzek.apidoc.spec.v0.models.Response]]
      )(Operation.apply _)
    }

    implicit def jsonWritesApidocspecOperation: play.api.libs.json.Writes[Operation] = {
      (
        (__ \ "method").write[com.bryzek.apidoc.spec.v0.models.Method] and
        (__ \ "path").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "body").writeNullable[com.bryzek.apidoc.spec.v0.models.Body] and
        (__ \ "parameters").write[Seq[com.bryzek.apidoc.spec.v0.models.Parameter]] and
        (__ \ "responses").write[Seq[com.bryzek.apidoc.spec.v0.models.Response]]
      )(unlift(Operation.unapply _))
    }

    implicit def jsonReadsApidocspecOrganization: play.api.libs.json.Reads[Organization] = {
      (__ \ "key").read[String].map { x => new Organization(key = x) }
    }

    implicit def jsonWritesApidocspecOrganization: play.api.libs.json.Writes[Organization] = new play.api.libs.json.Writes[Organization] {
      def writes(x: Organization) = play.api.libs.json.Json.obj(
        "key" -> play.api.libs.json.Json.toJson(x.key)
      )
    }

    implicit def jsonReadsApidocspecParameter: play.api.libs.json.Reads[Parameter] = {
      (
        (__ \ "name").read[String] and
        (__ \ "type").read[String] and
        (__ \ "location").read[com.bryzek.apidoc.spec.v0.models.ParameterLocation] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "required").read[Boolean] and
        (__ \ "default").readNullable[String] and
        (__ \ "minimum").readNullable[Long] and
        (__ \ "maximum").readNullable[Long] and
        (__ \ "example").readNullable[String]
      )(Parameter.apply _)
    }

    implicit def jsonWritesApidocspecParameter: play.api.libs.json.Writes[Parameter] = {
      (
        (__ \ "name").write[String] and
        (__ \ "type").write[String] and
        (__ \ "location").write[com.bryzek.apidoc.spec.v0.models.ParameterLocation] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "required").write[Boolean] and
        (__ \ "default").writeNullable[String] and
        (__ \ "minimum").writeNullable[Long] and
        (__ \ "maximum").writeNullable[Long] and
        (__ \ "example").writeNullable[String]
      )(unlift(Parameter.unapply _))
    }

    implicit def jsonReadsApidocspecResource: play.api.libs.json.Reads[Resource] = {
      (
        (__ \ "type").read[String] and
        (__ \ "plural").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "operations").read[Seq[com.bryzek.apidoc.spec.v0.models.Operation]]
      )(Resource.apply _)
    }

    implicit def jsonWritesApidocspecResource: play.api.libs.json.Writes[Resource] = {
      (
        (__ \ "type").write[String] and
        (__ \ "plural").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "operations").write[Seq[com.bryzek.apidoc.spec.v0.models.Operation]]
      )(unlift(Resource.unapply _))
    }

    implicit def jsonReadsApidocspecResponse: play.api.libs.json.Reads[Response] = {
      (
        (__ \ "code").read[com.bryzek.apidoc.spec.v0.models.ResponseCode] and
        (__ \ "type").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(Response.apply _)
    }

    implicit def jsonWritesApidocspecResponse: play.api.libs.json.Writes[Response] = {
      (
        (__ \ "code").write[com.bryzek.apidoc.spec.v0.models.ResponseCode] and
        (__ \ "type").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(unlift(Response.unapply _))
    }

    implicit def jsonReadsApidocspecService: play.api.libs.json.Reads[Service] = {
      (
        (__ \ "apidoc").read[com.bryzek.apidoc.spec.v0.models.Apidoc] and
        (__ \ "name").read[String] and
        (__ \ "organization").read[com.bryzek.apidoc.spec.v0.models.Organization] and
        (__ \ "application").read[com.bryzek.apidoc.spec.v0.models.Application] and
        (__ \ "namespace").read[String] and
        (__ \ "version").read[String] and
        (__ \ "base_url").readNullable[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "info").read[com.bryzek.apidoc.spec.v0.models.Info] and
        (__ \ "headers").read[Seq[com.bryzek.apidoc.spec.v0.models.Header]] and
        (__ \ "imports").read[Seq[com.bryzek.apidoc.spec.v0.models.Import]] and
        (__ \ "enums").read[Seq[com.bryzek.apidoc.spec.v0.models.Enum]] and
        (__ \ "unions").read[Seq[com.bryzek.apidoc.spec.v0.models.Union]] and
        (__ \ "models").read[Seq[com.bryzek.apidoc.spec.v0.models.Model]] and
        (__ \ "resources").read[Seq[com.bryzek.apidoc.spec.v0.models.Resource]]
      )(Service.apply _)
    }

    implicit def jsonWritesApidocspecService: play.api.libs.json.Writes[Service] = {
      (
        (__ \ "apidoc").write[com.bryzek.apidoc.spec.v0.models.Apidoc] and
        (__ \ "name").write[String] and
        (__ \ "organization").write[com.bryzek.apidoc.spec.v0.models.Organization] and
        (__ \ "application").write[com.bryzek.apidoc.spec.v0.models.Application] and
        (__ \ "namespace").write[String] and
        (__ \ "version").write[String] and
        (__ \ "base_url").writeNullable[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "info").write[com.bryzek.apidoc.spec.v0.models.Info] and
        (__ \ "headers").write[Seq[com.bryzek.apidoc.spec.v0.models.Header]] and
        (__ \ "imports").write[Seq[com.bryzek.apidoc.spec.v0.models.Import]] and
        (__ \ "enums").write[Seq[com.bryzek.apidoc.spec.v0.models.Enum]] and
        (__ \ "unions").write[Seq[com.bryzek.apidoc.spec.v0.models.Union]] and
        (__ \ "models").write[Seq[com.bryzek.apidoc.spec.v0.models.Model]] and
        (__ \ "resources").write[Seq[com.bryzek.apidoc.spec.v0.models.Resource]]
      )(unlift(Service.unapply _))
    }

    implicit def jsonReadsApidocspecUnion: play.api.libs.json.Reads[Union] = {
      (
        (__ \ "name").read[String] and
        (__ \ "plural").read[String] and
        (__ \ "discriminator").readNullable[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "types").read[Seq[com.bryzek.apidoc.spec.v0.models.UnionType]]
      )(Union.apply _)
    }

    implicit def jsonWritesApidocspecUnion: play.api.libs.json.Writes[Union] = {
      (
        (__ \ "name").write[String] and
        (__ \ "plural").write[String] and
        (__ \ "discriminator").writeNullable[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation] and
        (__ \ "types").write[Seq[com.bryzek.apidoc.spec.v0.models.UnionType]]
      )(unlift(Union.unapply _))
    }

    implicit def jsonReadsApidocspecUnionType: play.api.libs.json.Reads[UnionType] = {
      (
        (__ \ "type").read[String] and
        (__ \ "description").readNullable[String] and
        (__ \ "deprecation").readNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(UnionType.apply _)
    }

    implicit def jsonWritesApidocspecUnionType: play.api.libs.json.Writes[UnionType] = {
      (
        (__ \ "type").write[String] and
        (__ \ "description").writeNullable[String] and
        (__ \ "deprecation").writeNullable[com.bryzek.apidoc.spec.v0.models.Deprecation]
      )(unlift(UnionType.unapply _))
    }

    implicit def jsonReadsApidocspecResponseCodeInt: play.api.libs.json.Reads[ResponseCodeInt] = {
      (__ \ "value").read[Int].map { x => new ResponseCodeInt(value = x) }
    }

    implicit def jsonWritesApidocspecResponseCodeInt: play.api.libs.json.Writes[ResponseCodeInt] = new play.api.libs.json.Writes[ResponseCodeInt] {
      def writes(x: ResponseCodeInt) = play.api.libs.json.Json.obj(
        "value" -> play.api.libs.json.Json.toJson(x.value)
      )
    }

    implicit def jsonReadsApidocspecResponseCode: play.api.libs.json.Reads[ResponseCode] = {
      (
        (__ \ "integer").read(jsonReadsApidocspecResponseCodeInt).asInstanceOf[play.api.libs.json.Reads[ResponseCode]]
        orElse
        (__ \ "response_code_option").read(jsonReadsApidocspecResponseCodeOption).asInstanceOf[play.api.libs.json.Reads[ResponseCode]]
        orElse
        play.api.libs.json.Reads(jsValue => play.api.libs.json.JsSuccess(com.bryzek.apidoc.spec.v0.models.ResponseCodeUndefinedType(jsValue.toString))).asInstanceOf[play.api.libs.json.Reads[ResponseCode]]
      )
    }

    implicit def jsonWritesApidocspecResponseCode: play.api.libs.json.Writes[ResponseCode] = new play.api.libs.json.Writes[ResponseCode] {
      def writes(obj: com.bryzek.apidoc.spec.v0.models.ResponseCode) = obj match {
        case x: ResponseCodeInt => play.api.libs.json.Json.obj("integer" -> jsonWritesApidocspecResponseCodeInt.writes(x))
        case x: com.bryzek.apidoc.spec.v0.models.ResponseCodeOption => play.api.libs.json.Json.obj("response_code_option" -> jsonWritesApidocspecResponseCodeOption.writes(x))
        case x: com.bryzek.apidoc.spec.v0.models.ResponseCodeUndefinedType => sys.error(s"The type[com.bryzek.apidoc.spec.v0.models.ResponseCodeUndefinedType] should never be serialized")
      }
    }
  }
}

